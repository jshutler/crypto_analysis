from statsmodels.regression.linear_model import OLSResults
from os import listdir
import pandas as pd 
from numpy import power
'''This script is designed to take all the regression models generated by time_series_analysis.py
and aggregate the macro results: R^2, standerd erros, etc. And put those macro results in a 
readable form that can analyze the results of the regression'''


def main(models, coin, dependent_variable='return'):
	#models is the list of model names
	r_squareds = []
	coefficients = []
	standerd_errors = []
	residuals = []
	times = []
	formulas = []

	for model in models:
		results = OLSResults.load(f'regression_models/{dependent_variable}_predictions/{coin}/{model}')
		r_squareds.append(results.rsquared)
		# coefficients.append(tuple(results.params))
		# standerd_errors.append(tuple(results.bse))
		coefficients.append(results.params)
		standerd_errors.append(results.bse)
		residuals.append(results.df_resid)
		times.append(get_time(model))
		formulas.append(get_formula(model))
	#puts all the import variables into a dictinary
	model_dict = {'r_squareds': r_squareds, 'coefficients': coefficients, 'standerd_errors': standerd_errors, 'residuals': residuals, 'times': times, 'formulas': formulas}

	model_df = pd.DataFrame(model_dict, index=models).sort_values('r_squareds', ascending=False)
	

	
	model_df.to_pickle(f'results/{dependent_variable}_predictions/{coin}_model_results.pickle')
	print(f'model saved to {coin}_model_results.pickle')


def get_time(model_name):
	'''gets the time for one model using the regex'''
	return model_name.split('_')[-2]

def get_formula(model_name):
	return ''.join(model_name.split()[:-1])



if __name__ == '__main__':
	coins = ['bitcoin', 'ethereum', 'Zcash', 'litecoin']
	dependent_variable = 'volume'
	for coin in coins:
		models = listdir(f'regression_models/{dependent_variable}_predictions/{coin}')
		main(models, coin, dependent_variable=dependent_variable)